package lyc.compiler;

import java_cup.runtime.*;

class Parser;


// Terminals
terminal	OP_ASIGNACION;
terminal	OP_MAS;
terminal	OP_MENOS;
terminal	OP_MULT;
terminal	OP_DIV;
terminal	PUNTO_COMA;
terminal	ID;
terminal	CONST_INT;
terminal	PARENTESIS_ABRE;
terminal	PARENTESIS_CIERRA;

// Non Terminals
non terminal	asignacion;
non terminal	expresion;
non terminal	termino;
non terminal	factor;
non terminal	left_side;

// Start Symbol Definition
start with asignacion;

asignacion 	::=	left_side expresion PUNTO_COMA 			{: System.out.println("REGLA 1 -- left_side expresion PUNTO_COMA"); :};
left_side	::= left_side ID:id OP_ASIGNACION:opAsig	{: System.out.println("REGLA 2 -- " + id + " " + opAsig);:};
left_side	::= ID:id OP_ASIGNACION:opAsig				{: System.out.println("REGLA 3 -- : " + id + " " + opAsig);:};
expresion	::=	expresion OP_MAS termino 				{: System.out.println("REGLA 4 -- expresion + termino"); :};
expresion 	::=	expresion OP_MENOS termino 				{: System.out.println("REGLA 5 -- expresion - termino"); :};
expresion 	::=	termino									{: System.out.println("REGLA 6 -- termino"); :};
termino		::= termino OP_MULT factor					{: System.out.println("REGLA 7 -- termino * factor");:};
termino		::= termino OP_DIV factor					{: System.out.println("REGLA 8 -- termino / factor");:};
termino		::= factor									{: System.out.println("REGLA 9 -- factor");:};
factor ::= PARENTESIS_ABRE expresion PARENTESIS_CIERRA	{: System.out.println("REGLA 10 -- factor = (expresion)"); :};
factor ::= CONST_INT:constante 							{: System.out.println("REGLA 11 -- Constante: " + constante ); :};
factor ::= ID:id  										{: System.out.println("REGLA 12 -- Id: " + id); :};